# -*- coding: utf-8 -*-
"""MiniProject.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18LGa78_iz6AaSxvCHehOGyyB380ok4Kx
"""

import numpy as np
import pandas as pd 
from xgboost import XGBClassifier
from sklearn.ensemble import RandomForestClassifier
from sklearn.tree import DecisionTreeClassifier
import pickle
data=pd.read_excel('Students Social Media Dataset (1).xlsx')

data.head()

data.tail()

data.isna().sum().sum()

data.describe()

data.drop({'Name'},axis=1,inplace=True)

x=data.drop({"Career"},axis=1)
y=data['Career']

x.head()

y.head()

from sklearn.preprocessing import LabelEncoder
label_encoder = LabelEncoder()
y = label_encoder.fit_transform(y)

print(y)

from sklearn.model_selection import train_test_split
X_train, X_test, Y_train, Y_test = train_test_split(x, y, test_size=0.3, stratify=y, random_state=25)

print(x.shape,X_train.shape,X_test.shape)

xgb = XGBClassifier()
xgb.fit(X_train,Y_train)

predict=xgb.predict(X_test)

from sklearn.metrics import accuracy_score
accuracy=accuracy_score(Y_test,predict)
print("Accuracy:",accuracy*100)

rfc = RandomForestClassifier()
rfc.fit(X_train,Y_train)

predict=rfc.predict(X_test)
from sklearn.metrics import accuracy_score
accuracy=accuracy_score(Y_test,predict)
print("Accuracy:",accuracy*100)

dt = DecisionTreeClassifier()
dt.fit(X_train, Y_train)
predict=dt.predict(X_test)
from sklearn.metrics import accuracy_score
accuracy=accuracy_score(Y_test,predict)
print("Accuracy:",accuracy*100)

input=(234,30,10,20,200,180,20,0,4,1,1,1,1)
input_data_numpy=np.asarray(input)
input_reshape=input_data_numpy.reshape(1,-1)
prediction=xgb.predict(input_reshape)
print(prediction)
pickle.dump(rfc, open('model.pkl', 'wb'))


